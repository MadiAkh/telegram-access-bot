import os
from aiogram import Router, types
from aiogram.filters import CommandStart
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from middlewares.restricted import get_admin_ids, get_user_ids, get_all_admins, has_exceeded_retries, get_reject_count
from .keyboards import get_keyboard_for_role, main_menu_kb

router = Router()
SUPER_ADMIN_ID = int(os.getenv("SUPER_ADMIN_ID"))

@router.message(lambda message: message.text == "üè° –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def handle_main_menu(message: types.Message):
    user_id = message.from_user.id
    keyboard, text = get_keyboard_for_role(user_id, SUPER_ADMIN_ID, get_admin_ids, get_user_ids)

    if keyboard:
        await message.answer(text, reply_markup=keyboard)
    elif has_exceeded_retries(user_id):
        await message.answer("‚ùå –í–∞–º —Ç—Ä–∏–∂–¥—ã –±—ã–ª–æ –æ—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ. –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.")
    else:
        full_name = message.from_user.full_name
        reject_count = get_reject_count(user_id)
        await message.answer(
            "‚è≥ –í–∞—à ID –∏ –∏–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.",
            reply_markup=main_menu_kb
        )
        for admin_id in get_all_admins():
            try:
                await message.bot.send_message(
                    chat_id=admin_id,
                    text=(
                        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: `{user_id}`\n"
                        f"–ò–º—è: {full_name} –ø—Ä–æ—Å–∏—Ç –¥–æ—Å—Ç—É–ø –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.\n"
                        f"‚ùå –û—Ç–∫–∞–∑–æ–≤ —Ä–∞–Ω–µ–µ: {reject_count}"
                    ),
                    reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                        [
                            InlineKeyboardButton(text="‚úÖ –î–∞—Ç—å –¥–æ—Å—Ç—É–ø", callback_data=f"approve_user:{user_id}"),
                            InlineKeyboardButton(text="‚ùå –û—Ç–∫–∞–∑–∞—Ç—å", callback_data=f"deny_user:{user_id}")
                        ]
                    ]),
                    parse_mode="Markdown"
                )
            except Exception as e:
                print(f"[‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É{admin_id}]: {e}")

@router.message(CommandStart())
async def start_handler(message: types.Message):
    user_id = message.from_user.id
    keyboard, text = get_keyboard_for_role(user_id, SUPER_ADMIN_ID, get_admin_ids, get_user_ids)

    if keyboard:
        await message.answer(text, reply_markup=keyboard)
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ üëÜüèº",reply_markup=main_menu_kb)
    elif has_exceeded_retries(user_id):
        await message.answer("‚ùå –í–∞–º —Ç—Ä–∏–∂–¥—ã –æ—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ. –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.")
    else:
        full_name = message.from_user.full_name
        reject_count = get_reject_count(user_id)
        await message.answer(
            "‚è≥ –í–∞—à ID –∏ –∏–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.",
            reply_markup=main_menu_kb
        )
        for admin_id in get_all_admins():
            try:
                await message.bot.send_message(
                    chat_id=admin_id,
                    text=(
                        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: `{user_id}`\n"
                        f"–ò–º—è: {full_name} –ø—Ä–æ—Å–∏—Ç –¥–æ—Å—Ç—É–ø –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.\n"
                        f"‚ùå –û—Ç–∫–∞–∑–æ–≤ —Ä–∞–Ω–µ–µ: {reject_count}"
                    ),
                    reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                        [
                            InlineKeyboardButton(text="‚úÖ –î–∞—Ç—å –¥–æ—Å—Ç—É–ø", callback_data=f"approve_user:{user_id}"),
                            InlineKeyboardButton(text="‚ùå –û—Ç–∫–∞–∑–∞—Ç—å", callback_data=f"deny_user:{user_id}")
                        ]
                    ]),
                    parse_mode="Markdown"
                )
            except Exception as e:
                print(f"[‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É {admin_id}]: {e}")